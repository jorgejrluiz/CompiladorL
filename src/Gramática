//Declarações main Bloco_de_Comandos fim_arquivo 
// C -> Comandos de atribuição | Comandos de repetição | Comandos de teste

// Declaração de variáveis:
id [= valor]
valor -> [ + | - ] inteiro | constante hexadecimal ou alfanumérica | TRUE |  FALSE

// Declaração de constantes escalares:

final id = valor;
D -> Declaração
T -> Tipo
V -> Valor
C -> Comandos

Gramática:

S -> {D} main "{" {C} "}"
D -> T X ; | final id = V;

X -> { id ([ = V ] | "["constante"]" ) [,] }+
T -> int | boolean | char 
V -> [ + | - ] constante

C ->  id [ "["Exp"]" ] := Exp; | 
      for "(" {J}; Exp; {J}; ")" ( C | "{" {C}+ "}" ) |
      if "(" Exp ")" then (C |"{"{C}"}") [else (C |"{"{C}"}")] |
      readln "(" id [ "[" Exp "]" ] ")"; |
      write "(" {A}+ ")" ; |
      writeln "(" {A}+ ")" ; |
      ;

J -> C [,] 
A -> Exp [,]
Exp -> ExpS [{ = | <> | < | > | <= | >= } ExpS]
ExpS -> [ + | - ] Termo {(+ | - | or) Termo}
Termo -> F {( * | / | % | and ) F}
F -> not F | "(" Exp ")" | constante | id ["["Exp"]"]

